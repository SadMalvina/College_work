#include <stdio.h>
#include <dirent.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <string.h>
#include <stdlib.h>
#include <errno.h>

void CheckDir(char *name) {

  struct dirent * item;
  struct stat info;
  int errno, res = 0, i = 0, a = 0, s = 0;
  char newfilename[64], namebuf[64];

  DIR * dir = opendir(name);
  printf ("opendir: %s\n",name);
  if (dir) {
    while((item = readdir(dir)) != 0) {
      char buffer[64] = "";
      strcpy(buffer,name);
      strcat(buffer,"/");
      strcat(buffer,item->d_name);
      if (stat(buffer, &info) != 0) {
        printf ("Error of stat: %s", strerror(errno));
        res = -1;
      } else {
        if (((info.st_mode & S_IFMT) == S_IFDIR) && (strcmp(item->d_name,".") != 0) && (strcmp(item->d_name,"..") != 0)) {
          CheckDir(buffer);
        } else {
          if ((info.st_mode & S_IFMT) == S_IFREG) {
            a = atoi (item->d_name);
            if (a < 0) {
              printf ("Error of atoi\n");
              res = 1;
            } else {
              if ((a > 0) && (a <= 999)) {
                a = a + 1000;
                if (snprintf(newfilename,5,"%d\n",a) < 1) {
                  printf ("Error of snprintf: %s\n",strerror(errno));
                  res = 1;
                } else {
                  char tmpbuf[64] = "";
                  strcpy(tmpbuf,name);
                  strcat(tmpbuf,"/");
                  strcat(tmpbuf,newfilename);
                  strcat(namebuf,name);
                  if (rename(strcat(namebuf,item->d_name),tmpbuf) == 0) {
                    printf ("The new file name is: %s\n", newfilename);
                  } else {
                    printf ("Error of rename file: %s\n",strerror(errno));
                    res = 1;
                  }
                }
              }
            }
          }
        }
      }
    }
    if ((errno != 0) && (item == 0)) {
      printf ("Error of reading directory: %s\n", strerror(errno));
      res = 1;
    } else {
      if (closedir(dir) == -1) {
        printf ("Error of closing directory: %s\n", strerror(errno));
        res = 1;
      }
    }
  } else {
    printf ("Error of open directory: %s\n", strerror(errno));
    res = 1;
  }
}

int main() {
  struct dirent * item;
  struct stat info;
  char name[64];
  strcpy(name,".");
  CheckDir(name);
}
